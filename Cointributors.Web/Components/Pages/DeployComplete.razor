@page "/repositories/{Id:long}/deployed"

@attribute [Authorize]

@using System.Text.Json
@using Cointributors.Data
@using Cointributors.Web.Components.Account
@using Microsoft.AspNetCore.Authorization
@using Octokit
@using Cointributors.Web.Client.Pages
@using Cointributors.Web.Client.Data

@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject DataContext DataContext

<PageTitle>Deployed</PageTitle>

<div class="container-sm coin-small">
    <h1>Deployed and Ready for Cointributions</h1>

    <p>Let everyone know you are ready to receive a Cointribution!</p>
    <p>You can copy the below badge and add it to your GitHub repository</p>

    @if (_cointributorsData == null)
    {

    }
    else
    {
        <div class="d-grid">
            <div class="clipboard-example align-items-center">
                <div class="input-group mb-3 mt-1">
                    <input id="in01"
                           type="text"
                           class="form-control"
                           placeholder="Cointributor Badge"
                           aria-label="Cointributor Badge"
                           aria-describedby="btn01"
                           value="[![Cointribute](https://img.shields.io/badge/Cointribute_to_this_project-blue)](https://localhost:7268/donate/@_cointributorsData.Address)"
                           readonly>
                    <button id="btn01"
                            class="btn btn-secondary"
                            type="button"
                            data-clipboard-demo=""
                            data-clipboard-target="#in01"
                            data-bs-toggle="tooltip"
                            data-bs-placement="bottom"
                            title="Copy to Clipboard">
                        Copy
                    </button>
                </div>
            </div>
        </div>
    }
</div>

<script>
    let btn = document.getElementById('btn01');
    let clipboard = new ClipboardJS(btn);

    clipboard.on('success', function (e) {
        console.log(e);
    });

    clipboard.on('error', function (e) {
        console.log(e);
    });
</script>

@code {

    [Parameter]
    public long Id { get; set; }

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    private GitHubClient gitHubClient;

    private CointributorsData? _cointributorsData;

    protected override async Task OnInitializedAsync()
    {
        var accessToken = await UserAccessor.GetGitHubAccessToken(HttpContext);

        gitHubClient = new GitHubClient(new ProductHeaderValue("cointributors"))
            {
                Credentials = new Credentials(accessToken)
            };

        var repository = await gitHubClient.Repository.Get(Id);

        var cointributorsBytes = await gitHubClient.Repository.Content.GetRawContent(repository.Owner.Login, repository.Name, "cointributors.json");

        _cointributorsData = JsonSerializer.Deserialize<CointributorsData>(cointributorsBytes);
    }
}